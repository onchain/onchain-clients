=begin
#OnChain Crypto Currency API

#We need to add a proper description.

OpenAPI spec version: 1.0
Contact: support@onchain.io
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.13-SNAPSHOT

=end

require 'uri'

module SwaggerClient
  class TransactionApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # @param coin_type 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [OnchainTransactionReply]
    def transaction_create_transaction(coin_type, body, opts = {})
      data, _status_code, _headers = transaction_create_transaction_with_http_info(coin_type, body, opts)
      data
    end

    # @param coin_type 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(OnchainTransactionReply, Fixnum, Hash)>] OnchainTransactionReply data, response status code and response headers
    def transaction_create_transaction_with_http_info(coin_type, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TransactionApi.transaction_create_transaction ...'
      end
      # verify the required parameter 'coin_type' is set
      if @api_client.config.client_side_validation && coin_type.nil?
        fail ArgumentError, "Missing the required parameter 'coin_type' when calling TransactionApi.transaction_create_transaction"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['BITCOIN', 'ETHEREUM', 'TESTNET3', 'BITCOIN_CASH', 'BITCOIN_GOLD', 'LITECOIN', 'DASH', 'DOGE', 'BITCOIN_PRIVATE', 'ZCASH', 'ZCASH_TESTNET', 'ZCLASSIC'].include?(coin_type)
        fail ArgumentError, "invalid value for 'coin_type', must be one of BITCOIN, ETHEREUM, TESTNET3, BITCOIN_CASH, BITCOIN_GOLD, LITECOIN, DASH, DOGE, BITCOIN_PRIVATE, ZCASH, ZCASH_TESTNET, ZCLASSIC"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling TransactionApi.transaction_create_transaction"
      end
      # resource path
      local_var_path = '/api/transaction/create/{coin_type}'.sub('{' + 'coin_type' + '}', coin_type.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OnchainTransactionReply')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TransactionApi#transaction_create_transaction\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # @param coin_type 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [OnchainTransactionSendReply]
    def transaction_send_raw(coin_type, body, opts = {})
      data, _status_code, _headers = transaction_send_raw_with_http_info(coin_type, body, opts)
      data
    end

    # @param coin_type 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(OnchainTransactionSendReply, Fixnum, Hash)>] OnchainTransactionSendReply data, response status code and response headers
    def transaction_send_raw_with_http_info(coin_type, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TransactionApi.transaction_send_raw ...'
      end
      # verify the required parameter 'coin_type' is set
      if @api_client.config.client_side_validation && coin_type.nil?
        fail ArgumentError, "Missing the required parameter 'coin_type' when calling TransactionApi.transaction_send_raw"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['BITCOIN', 'ETHEREUM', 'TESTNET3', 'BITCOIN_CASH', 'BITCOIN_GOLD', 'LITECOIN', 'DASH', 'DOGE', 'BITCOIN_PRIVATE', 'ZCASH', 'ZCASH_TESTNET', 'ZCLASSIC'].include?(coin_type)
        fail ArgumentError, "invalid value for 'coin_type', must be one of BITCOIN, ETHEREUM, TESTNET3, BITCOIN_CASH, BITCOIN_GOLD, LITECOIN, DASH, DOGE, BITCOIN_PRIVATE, ZCASH, ZCASH_TESTNET, ZCLASSIC"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling TransactionApi.transaction_send_raw"
      end
      # resource path
      local_var_path = '/api/transaction/send_raw/{coin_type}'.sub('{' + 'coin_type' + '}', coin_type.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OnchainTransactionSendReply')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TransactionApi#transaction_send_raw\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # @param coin_type 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [OnchainTransactionSendReply]
    def transaction_sign_and_send(coin_type, body, opts = {})
      data, _status_code, _headers = transaction_sign_and_send_with_http_info(coin_type, body, opts)
      data
    end

    # @param coin_type 
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(OnchainTransactionSendReply, Fixnum, Hash)>] OnchainTransactionSendReply data, response status code and response headers
    def transaction_sign_and_send_with_http_info(coin_type, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TransactionApi.transaction_sign_and_send ...'
      end
      # verify the required parameter 'coin_type' is set
      if @api_client.config.client_side_validation && coin_type.nil?
        fail ArgumentError, "Missing the required parameter 'coin_type' when calling TransactionApi.transaction_sign_and_send"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['BITCOIN', 'ETHEREUM', 'TESTNET3', 'BITCOIN_CASH', 'BITCOIN_GOLD', 'LITECOIN', 'DASH', 'DOGE', 'BITCOIN_PRIVATE', 'ZCASH', 'ZCASH_TESTNET', 'ZCLASSIC'].include?(coin_type)
        fail ArgumentError, "invalid value for 'coin_type', must be one of BITCOIN, ETHEREUM, TESTNET3, BITCOIN_CASH, BITCOIN_GOLD, LITECOIN, DASH, DOGE, BITCOIN_PRIVATE, ZCASH, ZCASH_TESTNET, ZCLASSIC"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling TransactionApi.transaction_sign_and_send"
      end
      # resource path
      local_var_path = '/api/transaction/sign_and_send/{coin_type}'.sub('{' + 'coin_type' + '}', coin_type.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'OnchainTransactionSendReply')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TransactionApi#transaction_sign_and_send\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
